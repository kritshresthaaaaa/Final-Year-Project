@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="flex gap-5 p-3">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var roles = await UserManager.GetRolesAsync(user);
        var isCustomerHandler = roles.Contains("Customer-Handler");

        <li class="flex justify-center items-center gap-2">
            @if (!string.IsNullOrEmpty(user.ImageUrl))
            {
                <img src="@user.ImageUrl" alt="Profile Image" class="w-8 h-8 rounded-full border-2 border-white">
            }
            else
            {
                      <i class='bx bx-user text-xl text-white'></i>
            }
      
            @if (!isCustomerHandler)
            {
                <a id="manage" class="text-white cursor-pointer" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            }
            else
            {
                <span class="text-white">Hello @UserManager.GetUserName(User)!</span>
            }
        </li>
        <li class="flex justify-center">
            <form id="logoutForm" class="flex gap-2" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <span class="inline-flex items-center justify-center text-xl text-white"><i class="bx bx-log-out"></i></span><button id="logout" type="submit" class="text-white">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item ">
            <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
