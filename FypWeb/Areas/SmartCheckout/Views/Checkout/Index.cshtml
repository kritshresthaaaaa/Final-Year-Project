@{
    Layout = "~/Views/Shared/_Customers.cshtml";
}
<section class=" flex-col space-y-4 h-screen">
    <div class=" w-full rounded-md flex justify-end gap-x-3">
        <div class="flex flex-col flex-shrink-0 space-y-2 md:flex-row md:items-center lg:justify-end md:space-y-0 md:space-x-3">

            <div id="countdown" class="text-sm font-medium text-gray-800"></div>
            <button id="refreshBtn" class="flex hidden items-center justify-center flex-shrink-0 px-3  text-sm font-medium text-white border rounded-lg bg-[#4ADE80]">
                <svg aria-hidden="true" role="status" id="loadingSpinner" class="  hidden ml-2 w-5 h-5 text-white animate-spin" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"></path>
                    <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="#1C64F2"></path>
                </svg>
                <span id="scanBtnText">Refresh</span>
            </button>


        </div>
    </div>
    <div class="flex flex-row  bg-white rounded-md h-[80%]  border ">

        <div id="nullProduct" hidden class="w-[65%]  rounded-md pt-12  ">
            <div class="">
                <div class="flex justify-center items-center  ">

                    <img src="~/img/cart-download-solid-228.png" class=" text-8xl  text-gray-600" />

                </div>
                <div class="">
                    <p class="text-center text-2xl text-gray-400  ml-8">No items in cart</p>
                </div>
            </div>
        </div>

        <div id="productDetails" class="w-[100%] grid grid-cols-4 gap-4 rounded-md p-4 overflow-auto h-[100%] custom-scrollbar">
        </div>

    </div>
    <button type="button" id="proceedBtn" class="flex items-center justify-center w-[15%] float-end flex-shrink-0 px-3 py-2 text-sm font-medium text-white border rounded-lg bg-[#7258DB] ">

        Proceed
    </button>

</section>
@section Scripts{
    <script>
        $(document).ready(function () {
            var initialInterval = 3000; // Initial delay of 5 seconds for the first refresh
            var repeatInterval = 5000; // Subsequent intervals of 3 seconds for refreshes
            var countdownInterval; // Interval for countdown
            var isFirstTime = true; // Flag to indicate if it's the first refresh
            function startCountdown(duration) {
                if (countdownInterval) clearInterval(countdownInterval); // Clear any existing countdown interval
                var countdownTime = duration / 1000; // Convert milliseconds to seconds for countdown
                $('#countdown').text(`Next refresh in ${countdownTime} seconds`);
                countdownInterval = setInterval(function () {
                    countdownTime -= 1;
                    $('#countdown').text(`Next refresh in ${countdownTime} seconds`);
                    if (countdownTime <= 0) clearInterval(countdownInterval);
                }, 1000);
            }
            function refreshProducts() {
                $.ajax({
                    url: '@Url.Action("GetProductDetailsByRFID", "Checkout", new { Area = "SmartCheckout" })', // Adjust the URL as necessary
                    type: 'GET',
                    beforeSend: function () {
                        $("#loadingSpinner").show(); // Show a loading indicator, if you have one
                    },
                    success: function (response) {

                        // Assuming 'response' contains the products data
                        if (response && response.products && response.products.length > 0) {
                            var detailsHtml = ''; // Initialize HTML string for product details
                            response.products.forEach(function (product) {
                                // Construct HTML content for each product
                                detailsHtml += '<div class="rounded overflow-hidden border bg-white h-56 " data-rfid="' + product.productRFID + '">' +
                                    '<img class="w-full h-[11rem] object-cover" src="https://via.placeholder.com/150" alt="Product Image">' +
                                    '<div class="flex justify-center">' +
                                    '<div class="p-2 text-center">' +
                                    '<span class="inline-block bg-green-300 rounded-full px-2 py-1 text-sm font-semibold text-gray-800">Rs.' + product.orderTotal + '</span>' +
                                    '<span class="ml-2 inline-block bg-blue-300 rounded-full px-2 py-1 text-sm font-semibold text-gray-800">x' + product.productCount + '</span>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>';
                            });

                            $("#productDetails").html(detailsHtml); // Display the products
                            $("#nullProduct").hide(); // Hide the "no products" message
                        } else {
                            $("#nullProduct").show(); // Show the "no products" message if no products were found
                            $("#productDetails").html(''); // Clear any previous products displayed
                        }
                    },
                    error: function () {
                        $("#nullProduct").show(); // Show or log an error message as needed
                    },
                    complete: function () {
                        // Adjust for the next refresh
                        var nextInterval = isFirstTime ? repeatInterval : repeatInterval;
                        isFirstTime = false; // Reset isFirstTime after the first call
                        startCountdown(nextInterval); // Start countdown for the next call
                        setTimeout(refreshProducts, nextInterval); // Set timeout for the next refresh
                    }
                });
            }

            startCountdown(initialInterval); // Start initial countdown immediately
            setTimeout(refreshProducts, initialInterval); // Then start the first product fetch after initial interval
        });
        $("#proceedBtn").click(function () {
            var rfidTags = [];
            $("#productDetails > div").each(function () {
                var rfid = $(this).attr('data-rfid');
                console.log("Current RFID:", rfid); // Log the RFID of each div
                if (rfid) {
                    rfidTags.push(rfid);
                }
            });

            console.log("RFID Tags to be sent:", rfidTags); // Added logging

            $.ajax({
                url: '@Url.Action("OrderConfirmation", "Checkout", new { Area = "SmartCheckout" })',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ RfidTags: rfidTags }),
                success: function (response) {
                    console.log("Order processing successful.", response);
                    if (response.redirectUrl) {
                        window.location.href = response.redirectUrl;
                    }
                },

                error: function (xhr, status, error) {
                    console.error("Error processing order:", error);
                }
            });
        });
    </script>
}
